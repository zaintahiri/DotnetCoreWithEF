@using DotnetCoreWithEF.Repository
@using Microsoft.Extensions.Options
@inject IBookRepository _repo;
@inject IConfiguration _config;

@* IOption method to bind appsetting values to a model class as below, dependency injection is used *@
@* @inject IOptions<NewBookAlertConfig> _configNewBookAlert; *@

@* @{ *@

@*     var newBookConfig = new NewBookAlertConfig(); *@
@*     _config.Bind("NewBookAlert", newBookConfig); *@
@* } *@

@* IOption method *@
@* @{ *@
@*     var newBookAlert = _configNewBookAlert.Value; *@
@* } *@

@inject IOptionsSnapshot<NewBookAlertConfig> _configNewBookAlert;
@{
    var newBookAlert = _configNewBookAlert.Get("NewBookAlert");
    var thirdPartyBookAlert = _configNewBookAlert.Get("ThirdPartyBook");
}

<header>
    <nav class="navbar navbar-expand-lg bg-body-tertiary">
        <div class="container-fluid">
            <a class="navbar-brand text-primary-emphasis" href="/home/index">
                @* @_repo.GetAppName() *@
                @_config["AppName"]
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        @*<a class="nav-link active" aria-current="page" href="/home/index">Home</a>*@
                        <a class="nav-link active" aria-current="page" asp-controller="home" asp-action="index">Home</a>
                    </li>

                    <li class="nav-item">
                        @*<a class="nav-link" href="/Categories/index">Categories</a>*@
                        <a class="nav-link" asp-controller="categories" asp-action="index">Categories</a>
                    </li>
                    <li class="nav-item">
                        @*<a class="nav-link" href="/Categories/index">Categories</a>*@
                        <a class="nav-link" asp-controller="book" asp-action="AddBook">Add Book</a>
                    </li>
                    <li class="nav-item">
                        @*<a class="nav-link" href="/Categories/index">Categories</a>*@
                        <a class="nav-link" asp-controller="book" asp-action="GetAllBooks">Books</a>
                    </li>

                </ul>
                <form class="d-flex" role="search">
                    <a href="#" class="btn btn-default">Login</a>
                    <a  asp-controller="account" asp-action="signup" class="btn btn-primary">Register</a>
                </form>
            </div>
        </div>
    </nav>

    @* @if(_config.GetValue<bool>("IsAllowAlert")) *@
    @* { *@
    @*     <div class="alert alert-info" role="alert"> *@
    @*         @(_config.GetValue<string>("Alert")) *@
    @*     </div> *@
    @* } *@

   @*  @if (_config.GetValue<bool>("NewBookAlert:DisplayNewBookAlert"))
    {
        <div class="alert alert-info" role="alert">
            @(_config.GetValue<string>("NewBookAlert:BookName"))
        </div>
    }
    *@

    @* @if (newBookConfig.DisplayNewBookAlert) *@
    @* { *@
    @*     <div class="alert alert-info" role="alert"> *@
    @*         @newBookConfig.BookName *@
    @*     </div> *@
    @* } *@

    @* using IOption method *@
    @* @if (newBookAlert.DisplayNewBookAlert) *@
    @* { *@
    @*     <div class="alert alert-info" role="alert"> *@
    @*         @newBookAlert.BookName *@
    @*     </div> *@
    @* } *@

    @*IOptionSnapShot with named *@

    @if (newBookAlert.DisplayNewBookAlert)
    {
        <div class="alert alert-info" role="alert">
            @newBookAlert.BookName
        </div>
    }

    @if (thirdPartyBookAlert.DisplayNewBookAlert)
    {
        <div class="alert alert-info" role="alert">
            @thirdPartyBookAlert.BookName
        </div>
    }

</header>